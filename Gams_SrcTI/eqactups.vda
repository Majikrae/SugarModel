*=============================================================================*
* EQACTUPS - implements the linear dispatching equations
*   %1 - MX control
*=============================================================================*
* Set indicators
  IF(CARD(RP_UPL)+CARD(RP_PL),OPTION CLEAR=UNCD7;
  AFUPS(R,T,P,S)$PRC_TS(R,P,S) $= AFS(R,T,P,S,'UP')$RP_UPL(R,P,'FX'); AFS(AFUPS,BD)=NO;
  RPS_UPS(R,P,S)$((STOAL(R,S)<2+1$RP_UPR(R,P,'N'))$RP_UPL(R,P,'FX')) = SUM(PRC_TS(R,P,TS)$RS_BELOW(R,S,TS),RS_BELOW1(R,S,TS) OR STOA(S));
  RP_UX(RP)$(NOT PRC_VINT(RP))$=RP_UPL(RP,'FX'); RTP_VARP(RTP(R,T,P))$RP_UX(R,P)=YES;
  COEF_AF(R,T,T,P,S,'UP')$AFUPS(R,T,P,S) $= NCAP_AF(R,T,P,S,'UP')$RP_UX(R,P);
* Check for startup costs
  UNCD7(R,LL--ORD(LL),P,TSL,RDCUR(R,CUR),'UP') $= ACT_CSTUP(R,LL,P,TSL,CUR);
  UNCD7(R,LL--ORD(LL),P,BD,RDCUR(R,CUR),'N') $= ACT_CSTRMP(R,LL,P,BD,CUR);
  LOOP(UNCD7(R,LL,P,ITEM,R,CUR,L),RP_UPS(R,P,TSL(ITEM),L)$(TSLVLNUM(TSL)$RP_UPL(R,P,'FX')>1)=YES; RPC_CUR(R,P,%PGPRIM%,CUR)=YES);
  RP_UPS(RP,TSL,L)$SUM(PRC_TSL(RP,TSLVL)$(ORD(TSL)>ORD(TSLVL)),1)=NO;
  RPS_UPS(RP,S)$SUM(RP_UPS(PRC_TSL(RP,TSL),L),1)=NO;
  RPS_UPS(R,P,S) $= SUM(RP_UPS(R,P,TSL,L)$TS_GROUP(R,TSL,S),1);
  RP_UPS(R,P,TSL,LNX(L))$RP_UPS(R,P,TSL,'UP') = SUM(RP_UPS(R,P,TSLVL,BD),RLUP(R,TSLVL,TSL)$BD(L)+RLUP(R,TSL,TSLVL)$IPS(L));
  RP_UPS(R,P,TSL,'FX')$(SUM(RP_UPS(PRC_TSL(R,P,TSLVL),L),RLUP(R,TSLVL,TSL))$RP_UPR(R,P,'UP'))=YES;
* Check partial loads
  LOOP(UNCD7(R,LL,P,TSL(ANNUAL),R,CUR,L),RP_UPS(R,P,TSL,L)=YES; RP_PL(R,P,'N')=YES);
  ACT_LOSPL(RTP(R,V,P),BDNEQ(BD))$((ACT_LOSPL(RTP,BD)<=0)$RP_PL(R,P,'N'))=MAX(.1+.5$BDUPX(BD),ACT_MINLD(RTP));
* Levelizing ACT_UPS
$ BATINCLUDE pp_lvlfc.mod ACT_UPS P PRC_TS ',BD' ",'0','0','0'" ALL_TS V RTP(R,V,P) '' '' N
  RTP_PL(RTP(R,V,P))$((ACT_LOSPL(RTP,'LO')=ACT_UPS(RTP,'ANNUAL','FX'))$RP_UPL(R,P,'FX'))$=RP_PL(R,P,'N');
* Check for cycling limits
  RP_UPC(R,P,TSL,'N')$RP_UPR(R,P,'N') $= SUM(RP_UPS(PRC_TSL(R,P,TSLVL),L),RLUP(R,TSLVL,TSL));
  RP_UPC(PRC_TSL(RP,TSL),BDNEQ(BD))$RP_UPS(RP,TSL,'UP') $= RP_UPR(RP,BD));
  OPTION RP_UPR < ACT_CSTRMP;
$SET CAPON (COEF_CPT(R,V,T,P)*(%VARV%_NCAP(R,V,P%SWS%)$T(V)+NCAP_PASTI(R,V,P)%RCAPSUB%))$PRC_VINT(R,P)+%VAR%_CAP(R,T,P%SOW%)$RP_UX(R,P)
$SET MX SUM(MODLYEAR(K)$(COEF_CPT(R,K,T,P)$(DIAG(V,K)>=1$PRC_VINT(R,P))),COEF_CPT(R,K,T,P)*(%VARM%_NCAP(R,K,P%SWS%)$T(K)+NCAP_PASTI(R,K,P)%RCAPSBM%))
$SET TMP $(NOT RP_UX(R,P))+%VAR%_CAP(R,T,P%SOW%)$RP_UX(R,P)%UPSCAPS%
*----------------------------------------------------------------------

  %EQ%_CAPLOAD(RTP_VINTYR(%R_V_T%,P),S,BDNEQ(BD)%SWT%)$((NOT RPS_CAFLAC(R,P,S,BD))$AFUPS(R,T,P,S))..

   %VAR%_ACT(R,V,T,P,S%SOW%)*BDSIG(BD)  =G=  %VAR%_UPS(R,V,T,P,S,'FX'%SOW%)$RTP_PL(R,V,P)$BDLOX(BD) +

* capacity - vintaged or not
   (%CAPON%%UPSCAPS%) * MIN(COEF_AF%1(R,V,T,P,S,'UP')*BDSIG(BD),SUM(TS_ANN(S,TS)$(NOT RTP_PL(R,V,P)),ACT_UPS(R,V,P,TS,'FX'))$BDLOX(BD)) *
   PRC_CAPACT(R,P) * G_YRFR(R,S);

*----------------------------------------------------------------------

  %EQ%_ACTRAMP(RTP_VINTYR(%R_V_T%,P),S,BDNEQ(BD)%SWT%)$(SUM(TS_ANN(S,TS)$ACT_UPS(R,V,P,TS,BD),1)$PRC_TS(R,P,S)$RP_UPL(R,P,BD))..

* max fraction of capacity
   SUM(PRC_TS(R,P,TS(S--RS_STG(R,S))),PRC_CAPACT(R,P)*SUM(TS_ANN(S,SL),ACT_UPS(R,V,P,SL,BD)) *
     (%MX%%TMP% + ((%VAR%_UPS(R,V,T,P,S,'N'%SOW%)-%VAR%_UPS(R,V,T,P,TS,'N'%SOW%))$BDLOX(BD))$RPS_UPS(R,P,S)) +

* dynamic ramp limits
     RS_STGPRD(R,S)*2/(G_YRFR(R,S)+G_YRFR(R,TS))/8760 *
     (%VAR%_ACT(R,V,T,P,S%SOW%)/G_YRFR(R,S)-%VAR%_ACT(R,V,T,P,TS%SOW%)/G_YRFR(R,TS) +
      ((%VAR%_UPS(R,V,T,P,S,'N'%SOW%)-%VAR%_UPS(R,V,T,P,TS,'N'%SOW%))*PRC_CAPACT(R,P)*SUM(TS_ANN(S,SL),ACT_UPS(R,V,P,SL,'FX')))$RPS_UPS(R,P,S))*BDSIG(BD))

    =G= 0;

*----------------------------------------------------------------------

  %EQ%E_ACTUPS(RTP_VINTYR(%R_V_T%,P),TSL,L(BDUPX),S%SWT%)$(TS_GROUP(R,TSL,S)$RP_UPS(R,P,TSL,L))..

* start-up/shut-down capacity
   (SUM(TS(S--RS_STG(R,S)),%VAR%_UPS(R,V,T,P,S,'N'%SOW%)-%VAR%_UPS(R,V,T,P,TS,'N'%SOW%)-SUM(BD,%VAR%_UPS(R,V,T,P,S,BD%SOW%)*BDSIG(BD)))$STOA(S) +
    SUM(ANNUAL(S),%VAR%_UPS(R,V,T,P,S,'UP'%SOW%)-SUM(PRC_TS(R,P,TS),%VAR%_UPS(R,V,T,P,TS,'FX'%SOW%))))$BDSIG(L) +
   (%VAR%_UDP(R,V,T,P,S,L%SOW%)-(%CAPON%%UPSCAPS%)+%VAR%_UPS(R,V,T,P,S,L%SOW%))$LNX(L)

    =E= 0;

*----------------------------------------------------------------------

  %EQ%L_ACTUPS(RTP_VINTYR(%R_V_T%,P),TSL,LNX(L),S%SWT%)$(TS_GROUP(R,TSL,S)$RP_UPS(R,P,TSL,L))..

* balance at higher level
   (%VAR%_UPS(R,V,T,P,S,L%SOW%)-SUM(RS_BELOW1(R,TS,S),%VAR%_UPS(R,V,T,P,TS,'FX'%SOW%)))$IPS(L) +
   (%VAR%_UPS(R,V,T,P,S,L%SOW%)-SUM(RS_BELOW1(R,S,TS),%VAR%_UPS(R,V,T,P,TS,'UP'%SOW%)))$BD(L)

    =L= 0;

*----------------------------------------------------------------------

  %EQ%L_ACTUPC(RTP_VINTYR(%R_V_T%,P),TSL,L,S%SWT%)$(TS_GROUP(R,TSL,S)$RP_UPC(R,P,TSL,L))..

* max number of cycles
   (SUM(RS_BELOW1(R,S,SL),%VAR%_UPS(R,V,T,P,SL,'UP'%SOW%)) - (%CAPON%%UPSCAPS%)*ACT_UPS(R,V,P,'ANNUAL',L))$IPS(L) +
* min UP/LO hours
   SUM(BD(L),SUM((RS_UP(R,S,JS),RJ_SL(R,JS,SL)),
       %VAR%_UPS(R,V,T,P,SL,L%SOW%)$(MOD(RS_HR(R,S)-RS_HR(R,SL)+G_YRFR(R,S)/RS_STGPRD(R,S)/2+1/G_CYCLE(TSL),1/G_CYCLE(TSL))<ACT_TIME(R,T,P,L)/8760)) -
     SUM(RS_UP(R,S,J,TS),%VAR%_UPS(R,V,T,P,TS,'FX'%SOW%)-%VAR%_UPS(R,V,T,P,S,'N'%SOW%))$BDUPX(BD)-%VAR%_UPS(R,V,T,P,S,'N'%SOW%)$BDLOX(BD))

    =L= 0;

*----------------------------------------------------------------------

  %EQ%_ACTPL(RTP_VINTYR(%R_V_T%,P),S%SWT%)$(PRC_TS(R,P,S)$RP_PL(R,P,'N'))..

* partial loads
   %VAR%_UPS(R,V,T,P,S,'FX'%SOW%)  =G=

   ((%MX%%TMP%)*PRC_CAPACT(R,P)*G_YRFR(R,S) * (ACT_LOSPL(R,V,P,'UP')+ACT_LOSPL(R,V,P,'LO')*(1-ACT_LOSPL(R,V,P,'UP'))) -
    %VAR%_ACT(R,V,T,P,S%SOW%)) / (ACT_LOSPL(R,V,P,'UP')*(1/ACT_LOSPL(R,V,P,'LO')-1)) +
   sum((rp_upt(r,p,upt,bd),PRC_TSL(R,P,TSL))$DP_UNS(R,V,T,P,TSL,'IN','N'),
     sum((rs_up(r,s,js),rj_sl(r,js,sl))$(MOD((RS_HR(r,s)-RS_HR(r,sl))*BDSIG(bd)+G_YRFR(r,sl)/RS_STGPRD(r,s)/2+2/G_CYCLE(tsl),1/G_CYCLE(tsl))<ACT_SDTIME(r,v,p,upt,bd)/8760*(1.001)),
       MIN(1,MOD((RS_HR(r,s)-RS_HR(r,sl))*BDSIG(bd)+(G_YRFR(r,sl)-G_YRFR(r,s))/2/RS_STGPRD(r,s)+2/G_CYCLE(tsl),1/G_CYCLE(tsl))/(ACT_SDTIME(r,v,p,upt,bd)/8760))*(1-DIAG(S,SL))*DP_PSUD(r,v,p,upt,bd) *
       (%var%_upt(r,v,t,p,sl,upt%SOW%)$bdupx(bd) + %var%_ups(r,v,t,p,sl,bd%SOW%)$bdlox(bd))) * PRC_CAPACT(r,p)*G_YRFR(r,s)*ACT_MINLD(r,v,p))$DP_LOSD(r,v,p);

*----------------------------------------------------------------------

  %EQ%_ACTRMPC(RTP_VINTYR(%R_V_T%,P),TS(S--RS_STG(R,S))%SWT%)$(PRC_TS(R,P,S)$SUM(RP_UPR(R,P,BD),1))..

* ramping costs
   (%VAR%_ACT(R,V,T,P,TS%SOW%)/G_YRFR(R,TS)-%VAR%_ACT(R,V,T,P,S%SOW%)/G_YRFR(R,S))/PRC_CAPACT(R,P) =E=
   SUM(BDNEQ(BD),%VAR%_UDP(R,V,T,P,S,BD%SOW%)*BDSIG(BD))-ACT_MINLD(R,V,P)*(%VAR%_UPS(R,V,T,P,TS,'N'%SOW%)-%VAR%_UPS(R,V,T,P,S,'N'%SOW%))$RPS_UPS(R,P,S);

*----------------------------------------------------------------------
* Define map for TS within same cycle
  IF(CARD(RS_HR),
  LOOP(JS(J,ANNUAL),
    RJ_SL(R,J+(MOD(ROUND((RS_HR(R,TS)*8760)/146,0),60)*2),S,TS)$RS_BELOW1(R,S,TS) = YES;
    RJ_SL(R,J+(MOD(ROUND((RS_HR(R,TS)*8760-73)/146+60,0),60)*2+1),S,TS)$RS_BELOW1(R,S,TS) = YES;
    OPTION RS_UP < RJ_SL;
  ));
  IF(CARD(RS_UP),
*   Remove hours too far
    RS_UP(R,TS,J,S)$((MOD(RS_HR(R,TS)-(ORD(J)-2)*73/8760+1,1)<48/8760) OR (MOD(ORD(J)*73/8760-RS_HR(R,TS)+1,1)<25/8760)) = NO;
    OPTION JS < RS_UP; RJ_SL(R,J,S,TS)$(NOT JS(J,S)) = NO;
  );
